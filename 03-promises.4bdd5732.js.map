{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,MAAMC,KAAKC,SAASC,iBAAiB,UAC9CC,EAASJ,MAAMC,KAAKC,SAASC,iBAAiB,UAC9CE,EAAOH,SAASI,cAAc,SAC9BC,EAAYL,SAASI,cAAc,yBAEzCC,EAAUC,MAAMC,SAAW,OAC3BF,EAAUC,MAAME,QAAU,MAE1B,IAAK,MAAMC,KAASZ,EAClBY,EAAMH,MAAMI,QAAU,eACtBD,EAAMH,MAAMC,SAAW,OACvBE,EAAMH,MAAMK,WAAa,MAG3B,IAAK,MAAMC,KAASV,EAClBU,EAAMN,MAAMI,QAAU,QACtBE,EAAMN,MAAME,QAAU,MACtBI,EAAMN,MAAMC,SAAW,OAGzB,MAAMM,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASC,KACbC,YAAW,KACDC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,IAIbZ,EAAKmB,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,MAAMC,EAAcC,OAAOvB,EAAKwB,SAASC,OAAOC,OAC1CC,EAAYJ,OAAOvB,EAAKwB,SAASI,KAAKF,OACtCG,EAAaN,OAAOvB,EAAKwB,SAASZ,MAAMc,OAE9C,IAAK,IAAII,EAAI,EAAGA,GAAKR,EAAaQ,GAAK,EAAG,CAExCpB,EAAcoB,EADCD,EAAaF,GAAaG,EAAI,IAE1CC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxC,GAASyC,OAAOC,QAAQ,uBAAqBvB,QAAiBC,OAAW,IAE1EuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MACnBoB,EAAAxC,GAASyC,OAAOG,QAAQ,sBAAoBzB,QAAeC,OAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst labels = Array.from(document.querySelectorAll('label'));\nconst inputs = Array.from(document.querySelectorAll('input'));\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector(`button[type=\"submit\"]`);\n\nsubmitBtn.style.fontSize = '15px';\nsubmitBtn.style.padding = '5px';\n\nfor (const label of labels) {\n  label.style.display = 'inline-block';\n  label.style.fontSize = '15px';\n  label.style.fontWeight = '600';\n}\n\nfor (const input of inputs) {\n  input.style.display = 'block';\n  input.style.padding = '5px';\n  input.style.fontSize = '15px';\n}\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    let setTime = setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const valueAmount = Number(form.elements.amount.value);\n  const valueStep = Number(form.elements.step.value);\n  const valueDelay = Number(form.elements.delay.value);\n\n  for (let i = 1; i <= valueAmount; i += 1) {\n    let stepTime = valueDelay + valueStep * (i - 1);\n    createPromise(i, stepTime)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`)\n      })\n      .catch(({ position, delay }) => {\n       Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`)\n      });\n  }\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$labels","Array","from","document","querySelectorAll","$47d4ff9957288465$var$inputs","$47d4ff9957288465$var$form","querySelector","$47d4ff9957288465$var$submitBtn","style","fontSize","padding","label","display","fontWeight","input","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","valueAmount","Number","elements","amount","value","valueStep","step","valueDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.4bdd5732.js.map"}